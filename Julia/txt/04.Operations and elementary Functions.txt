+x
-x
x + y
x - y
x * y
x / y
x ÷ y <-몫 나누기 기호는 Alt+0247
x \ y <- y / x
x ^ y
x % y <- 나머지


!x <- not연산 Boolean 가능

1 + 2 + 3
1 - 2
3*2/12

false acts as a strong zero
NaN * false -> 0.0
false * Inf -> 0.0

~x <- bitwise not
x & y <- bitwise and
x | y <- bitwise or
x ⊻ y <- bitwise xor \xor tap xor(x,y)도 가능
x >>> y <-logical shift right 부호 상관 없이
x >> y <- arithmetic shift right 부호 상관 있음
x << y <- logical/arthmetic shift left

x = 1
x += 1
+= -= *= /= \= ÷= ^= &= |= ⊻= >>>= >>= <<=

dot operators
[1, 2, 3] .^ 3
1
8
27

a .^ b == (^).(a,b)
2 .* A.^2 .+ sin.(A) == @. 2A^2 + sin(A) <- for array A. @macro
a .+= b or @. a += b -> a .= a .+ b

if some operator defined as ⊗(A,B) = kron(A,B)
A⊗B can be used. [A, B] .⊗ [C, D] will compute [A⊗C, B⊗D]
1.+x -> 1.0 + x, 1 .+x so disable to use this expression. space needed
==
!= or ≠
<
<= or ≤
>
>= or ≥

[1 NaN] != [1 NaN]
because NaN != NaN
but isequal(NaN, NaN) == true
isequal(-0.0, 0.0) == false
isequal(x, y) <- hash(x) == hash(y)
isfinite(x, y)
isinf(x)
isnan(x)

Chaining comparisons
1 < 2 <= 2 < 3 == 3 > 2 >= 1 == 1 < 3 != 5
1 < 2 && 2 <= 2 && 2 < 3 && 3 == 3 ....
0 .< A .< 1 useful

v(x) = (println(x); x)
v(1) < v(2) <= v(3)
v(1) > v(2) <= v(3)     v(x)???

Base.operator_precedence(:+)
Base.operator_precedence(:(=))
Base.operator_associativity(:-) ??


Numerical Conversions
T(x) or convert(T, x) x to type T
Int8(127)

127 % Int8 -> 127
128 % Int8 -> -128
round(Int8, 127.4)

round(x)
round(T, x)
floor(x)
floor(T, x)
ceil(x)
ceil(T, x)
trunc(x)
trunc(T, x)


div(x, y) -> x÷y
fld(x, y)
cld(x, y)
rem(x, y)
mod(x, y)
mod1(x, y)
mod2pi(x)
divrem(x, y)
fldmid(x, y)
gcd(x, y,...) 최대공약수
lcm(x, y,...) 최소공배수

abs(x)
abs2(x)
sign(x)
signbit(x)
copysigh(x, y) value x and sigh y
filpsign(x, y) sign of x*y

sqrt(x), √x
cbrt(x), ∛x
hypot(x, y) 삼각형의 빗변
exp(x)
expm1(x)
ldexp(x, n) x*2^n
log(x)
log(b, x)  밑b log x
log2(x)
log10(x)
log1p(x)
exponent(x) 이진지수
sighificand(x) 부동 소수점 숫자의 이진 부호. 가수

sin    cos    tan    cot    sec    csc
sinh   cosh   tanh   coth   sech   csch
asin   acos   atan   acot   asec   acsc
asinh  acosh  atanh  acoth  asech  acsch
sinc   cosc


sind   cosd   tand   cotd   secd   cscd
asind  acosd  atand  acotd  asecd  acscd


SpecialFunctions.jl 패키지에 더 많은 특수 수학 함수가 있음
], add Specialfunctions.jl
